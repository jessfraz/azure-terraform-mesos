#cloud-config

---
coreos:
  etcd:
    discovery: "https://discovery.etcd.io/1d77508dc31cf372d517ed2e96e8f5cf"
    advertise-client-urls: "http://$private_ipv4:2379"
    initial-advertise-peer-urls:  "http://$private_ipv4:2380"
    listen_client_urls:          "http://0.0.0.0:2379"
    listen_peer_urls:            "http://$private_ipv4:2380"
  units:
  - name: consul.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Consul
      After=docker.service
      Requires=docker.service
      Wants=consul-announce.service
      Before=consul-announce.service

      [Service]
      Restart=on-failure
      RestartSec=20
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker rm -f consul
      ExecStartPre=-/usr/bin/docker pull r.j3ss.co/consul:latest
      ExecStart=/usr/bin/sh -c "/usr/bin/docker run \
        -e SERVICE_IGNORE=true \
        --net=host \
        --volume /etc/consul.d:/etc/consul.d \
        --volume /etc/consul/certs:/etc/consul/certs:ro \
        --volume /opt/consul:/opt/consul \
        --name=consul \
        r.j3ss.co/consul:latest \
          agent \
          -bootstrap-expect 4 \
          -config-dir /etc/consul.d \
          -advertise $private_ipv4"
      ExecStop=/usr/bin/docker stop consul

      [Install]
      WantedBy=multi-user.target
  - name: consul-announce.service
    command: start
    content: |
      [Unit]
      Description=Consul Announcer
      PartOf=consul.service
      After=consul.service

      [Service]
      StandardOutput=console
      Restart=on-failure
      RestartSec=20
      Environment=NOMAD_HOSTS=10.0.0.5,10.0.0.6,10.0.0.7,10.0.0.8,10.0.0.9,10.1.0.5,10.1.0.6,10.1.0.7,10.1.0.8,10.1.0.9,10.2.0.5,10.2.0.6,10.2.0.7,10.2.0.8,10.2.0.9
      ExecStart=/bin/bash /etc/consul/join.sh
  - name: nomad.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Nomad Server
      After=docker.service consul.service consul-announce.service
      Requires=docker.service consul.service

      [Service]
      Restart=on-failure
      RestartSec=20
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker rm -f nomad
      ExecStartPre=-/usr/bin/docker pull r.j3ss.co/nomad:latest
      ExecStart=/usr/bin/sh -c "/usr/bin/docker run \
        -e SERVICE_IGNORE=true \
        --net=host \
        --volume /etc/nomad.d:/etc/nomad.d \
        --volume /etc/consul/certs:/etc/consul/certs:ro \
        --volume /etc/nomad/certs:/etc/nomad/certs:ro \
        --name=nomad \
        r.j3ss.co/nomad:latest \
          agent -config=/etc/nomad.d/server.hcl"
      ExecStop=/usr/bin/docker stop nomad

      [Install]
      WantedBy=multi-user.target
write_files:
- path: "/home/vmuser/.bashrc"
  permissions: "0777"
  owner: "vmuser"
  content: |
    # /etc/skel/.bashrc
    #
    # This file is sourced by all *interactive* bash shells on startup,
    # including some apparently interactive shells such as scp and rcp
    # that can't tolerate any output.  So make sure this doesn't display
    # anything or bad things will happen !


    # Test for an interactive shell.  There is no need to set anything
    # past this point for scp and rcp, and it's important to refrain from
    # outputting anything in those cases.
    if [[ $- != *i* ]] ; then
            # Shell is non-interactive.  Be done now!
            return
    fi

    consul(){
      sudo docker run --rm -it --net host \
        -e CONSUL_HTTP_ADDR=https://127.0.0.1:8501 \
        -e CONSUL_CACERT=/etc/consul/certs/ca.pem \
        -e CONSUL_CLIENT_CERT=/etc/consul/certs/cli.pem \
        -e CONSUL_CLIENT_KEY=/etc/consul/certs/cli-key.pem \
        -v /etc/consul/certs:/etc/consul/certs:ro \
        r.j3ss.co/consul $@
    }

    nomad(){
      sudo docker run --rm -it --net host \
        -e NOMAD_ADDR=https://127.0.0.1:4646 \
        -e NOMAD_CACERT=/etc/nomad/certs/ca.pem \
        -e NOMAD_CLIENT_CERT=/etc/nomad/certs/cli.pem \
        -e NOMAD_CLIENT_KEY=/etc/nomad/certs/cli-key.pem \
        -v /etc/nomad/certs:/etc/nomad/certs:ro \
        -v $(pwd):/usr/src \
        --workdir /usr/src \
        r.j3ss.co/nomad $@
    }
- path: "/etc/nomad.d/server.hcl"
  permissions: "0644"
  owner: "root"
  content: |
    data_dir = "/etc/nomad.d"

    server {
      enabled          = true
      bootstrap_expect = 4

      encrypt = "NOMAD_GOSSIP_ENCRYPTION_SECRET"
    }

    consul {
      address = "127.0.0.1:8501"
      ca_file = "/etc/consul/certs/ca.pem"
      cert_file = "/etc/consul/certs/server.pem"
      key_file = "/etc/consul/certs/server-key.pem"
      ssl = true
    }

    tls {
      http = true
      rpc  = true

      ca_file   = "/etc/nomad/certs/ca.pem"
      cert_file = "/etc/nomad/certs/server.pem"
      key_file  = "/etc/nomad/certs/server-key.pem"

      #verify_server_hostname = true
      verify_https_client    = true
    }
- path: "/etc/consul.d/config.json"
  permissions: "0644"
  owner: "root"
  content: |
    {
      "datacenter": "dc1",
      "data_dir": "/opt/consul",
      "log_level": "INFO",
      "server": true,
      "encrypt": "CONSUL_GOSSIP_ENCRYPTION_SECRET",
      "verify_outgoing": true,
      "verify_incoming": true,
      "verify_incoming_rpc": true,
      "verify_incoming_https": true,
      "addresses": {
        "https": "0.0.0.0"
      },
      "ports": {
        "http": -1,
        "https": 8501,
        "grpc": 8502
      },
      "key_file": "/etc/consul/certs/server-key.pem",
      "cert_file": "/etc/consul/certs/server.pem",
      "ca_file": "/etc/consul/certs/ca.pem"
    }
- path: "/etc/consul/join.sh"
  permissions: "0744"
  owner: "root"
  content: |
    #!/bin/bash
    set -e
    set -o pipefail
    set -x

    # Add the hosts.
    if [ -n "${NOMAD_HOSTS+1}" ]; then
      IFS=',' read -r -a nhosts <<< "$NOMAD_HOSTS"
      for host in "${nhosts[@]}"; do
        /usr/bin/docker run --rm --net host \
          -e CONSUL_HTTP_ADDR=https://127.0.0.1:8501 \
          -e CONSUL_CACERT=/etc/consul/certs/ca.pem \
          -e CONSUL_CLIENT_CERT=/etc/consul/certs/cli.pem \
          -e CONSUL_CLIENT_KEY=/etc/consul/certs/cli-key.pem \
          -v /etc/consul/certs:/etc/consul/certs:ro \
          r.j3ss.co/consul:latest join "$host" || true
      done
    fi
